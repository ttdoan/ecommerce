{"version":3,"sources":["../src/app.js"],"names":["createError","require","path","cookieParser","logger","usersRouter","app","set","join","__dirname","use","express","json","urlencoded","extended","static","indexRouter","signupRouter","req","res","next","err","locals","message","error","get","status","render","module","exports"],"mappings":";;AAAA;;AAGA;;AACA;;;;AAFA;AAIA,IAAIA,WAAW,GAAGC,OAAO,CAAC,aAAD,CAAzB,C,CACA;;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIE,YAAY,GAAGF,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAIG,MAAM,GAAGH,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAII,WAAW,GAAGJ,OAAO,CAAC,gBAAD,CAAzB;;AAEA,IAAIK,GAAG,GAAG,uBAAV,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBL,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAH,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AAEAD,GAAG,CAACI,GAAJ,CAAQN,MAAM,CAAC,KAAD,CAAd;AACAE,GAAG,CAACI,GAAJ,CAAQC,iBAAQC,IAAR,EAAR;AACAN,GAAG,CAACI,GAAJ,CAAQC,iBAAQE,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAR,GAAG,CAACI,GAAJ,CAAQP,YAAY,EAApB,E,CAEA;;AACAG,GAAG,CAACI,GAAJ,CAAQC,iBAAQI,MAAR,CAAe,QAAf,CAAR;AACAT,GAAG,CAACI,GAAJ,CAAQC,iBAAQI,MAAR,CAAe,MAAf,CAAR,E,CAEA;;AACAT,GAAG,CAACI,GAAJ,CAAQ,GAAR,EAAaM,cAAb,E,CACA;;AACAV,GAAG,CAACI,GAAJ,CAAQ,SAAR,EAAmBO,eAAnB,E,CAEA;;AACAX,GAAG,CAACI,GAAJ,CAAQ,UAAUQ,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAChCA,EAAAA,IAAI,CAACpB,WAAW,CAAC,GAAD,CAAZ,CAAJ;AACD,CAFD,E,CAIA;;AACAM,GAAG,CAACI,GAAJ,CAAQ,UAAUW,GAAV,EAAeH,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AACrC;AACAD,EAAAA,GAAG,CAACG,MAAJ,CAAWC,OAAX,GAAqBF,GAAG,CAACE,OAAzB;AACAJ,EAAAA,GAAG,CAACG,MAAJ,CAAWE,KAAX,GAAmBN,GAAG,CAACZ,GAAJ,CAAQmB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE,CAHqC,CAKrC;;AACAF,EAAAA,GAAG,CAACO,MAAJ,CAAWL,GAAG,CAACK,MAAJ,IAAc,GAAzB;AACAP,EAAAA,GAAG,CAACQ,MAAJ,CAAW,OAAX;AACD,CARD;AAUAC,MAAM,CAACC,OAAP,GAAiBvB,GAAjB","sourcesContent":["import express from \"express\";\n\n// Routes\nimport signupRouter from \"./routes/signup\";\nimport indexRouter from \"./routes/index\";\n\nvar createError = require(\"http-errors\");\n// var express = require(\"express\");\nvar path = require(\"path\");\nvar cookieParser = require(\"cookie-parser\");\nvar logger = require(\"morgan\");\n\nvar usersRouter = require(\"./routes/users\");\n\nvar app = express();\n\n// view engine setup\napp.set(\"views\", path.join(__dirname, \"views\"));\napp.set(\"view engine\", \"pug\");\n\napp.use(logger(\"dev\"));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\n\n// app.use(express.static(path.join(__dirname, \"public\")));\napp.use(express.static(\"public\"));\napp.use(express.static(\"dist\"));\n\n// Routes\napp.use(\"/\", indexRouter);\n// app.use(\"/users\", usersRouter);\napp.use(\"/signup\", signupRouter);\n\n// catch 404 and forward to error handler\napp.use(function (req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function (err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render(\"error\");\n});\n\nmodule.exports = app;\n"],"file":"app.js"}